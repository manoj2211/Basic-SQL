#SQL commands for basic 

1.	Which category has maximum products 
SELECT category_code, COUNT(product_code)
FROM product
GROUP BY category_code
HAVING COUNT(product_code)>=ALL(SELECT COUNT(product_code)
                                FROM product                     
                                GROUP BY category_code)
								
2.	Which category has minimum products?
SELECT category_code, COUNT(product_code)
FROM product
GROUP BY category_code
HAVING COUNT(product_code)<=ALL(SELECT COUNT(product_code)
                                FROM product
                                GROUP BY category_code)

3.	Which category has no products?
SELECT category_code, COUNT(product_code)
FROM product
GROUP BY category_code
HAVING COUNT(product_code) NOT IN (SELECT COUNT(product_code)
                                FROM product
                                GROUP BY category_code) /
SELECT category_code 
FROM category
WHERE category_code NOT IN (SELECT category_code
						   FROM product)

SELECT * FROM product
SELECT * FROM category
4.	Which is the costliest product?
SELECT product_code,price,prod_desc,category_code
FROM product
WHERE price=(SELECT MAX(price) 
			 FROM product)

5.	Which category has costliest product?
SELECT category_code ,prod_desc
FROM product
WHERE price=(SELECT MAX(price) 
			 FROM product)
			

6.	Which category has lot of products (with respect to quantity on hand)?
SELECT category_code,SUM(qty_on_hand)
FROM product
GROUP BY category_code 
HAVING SUM(qty_on_hand) >= ALL(SELECT SUM(qty_on_hand)
					FROM product
				    GROUP BY category_code)


7.	Category wise display the costliest products?
SELECT category_code,prod_desc,price
FROM (SELECT category_code,prod_desc,price,dense_rank() OVER (partition by category_code order by price desc)
	  AS rk 
	  FROM product) tmp
WHERE rk=1

8.	Category wise display the product whose quantity on hand is minimum?
SELECT pro.category_code,pro.product_code,pro.prod_DESC,pro.qty_on_hand
FROM product pro
WHERE pro.qty_on_hand = (
	                     SELECT MIN(ctmin.qty_on_hand)
	                     FROM product ctmin
	                     WHERE ctmin.category_code=pro.category_code
	                     GROUP BY ctmin.category_code
                        )

9.	Which order has maximum products?
SELECT order_code,COUNT(product_code)
FROM order_detail
GROUP BY order_code
HAVING COUNT(product_code)>=ALL
                            (SELECT COUNT(product_code)
                             FROM order_detail
                             GROUP BY (order_code))
10.	Which is the frequently ordered product?
SELECT product_code,COUNT(order_code)
FROM order_detail
GROUP BY product_code
HAVING COUNT(order_code)>=ALL
                            (SELECT COUNT(order_code)
                             FROM order_detail
                             GROUP BY (product_code))

11.	Which product is least ordered product?
SELECT product_code,COUNT(order_code)
FROM order_detail
GROUP BY order_code,product_code
HAVING COUNT(product_code) <=ALL
                            (SELECT COUNT(order_code)
                             FROM order_detail
                             GROUP BY (product_code))
							 
12.	What product is not at all ordered?
SELECT product_code,COUNT(order_code)
FROM order_detail
GROUP BY order_code,product_code
HAVING COUNT(product_code) NOT IN
                            (SELECT COUNT(order_code)
                             FROM order_detail
                             GROUP BY (product_code))
13.	Which is the costliest order? ( Calculate the bill ) 
SELECT order_code,SUM(qty_ordered*price)
FROM product PR JOIN order_detail OD
ON PR.product_code=OD.product_code
GROUP BY order_code
HAVING SUM(qty_ordered*price)>=ALL
                               (SELECT SUM(qty_ordered*price)
							   FROM product PR JOIN order_detail OD
                               ON PR.product_code=OD.product_code
                               GROUP BY order_code)
							   
14.	In which date the costliest order made?
SELECT OD.order_code,OM.order_date,SUM(qty_ordered*price)
FROM product PR JOIN order_detail OD
ON PR.product_code=OD.product_code
JOIN order_master OM
ON OD.order_code=OM.order_code
GROUP BY OD.order_code,OM.order_date
HAVING SUM(qty_ordered*price)>=ALL
                               (SELECT SUM(qty_ordered*price)
	       		                FROM product PR JOIN order_detail OD
                                ON PR.product_code=OD.product_code
                                GROUP BY order_code)
								
15.	Which customer made the costliest order?
SELECT c.customer_code,SUM(qty_ordered*price),od.order_code
FROM  order_master c JOIN order_detail od
ON c.order_code= od.order_code
JOIN product pr
ON od.product_code= pr.product_code
GROUP BY od.order_code,c.customer_code
HAVING SUM(qty_ordered*price)>=ALL
                               (SELECT SUM(qty_ordered*price)
	       		                FROM product PR JOIN order_detail OD
                                ON PR.product_code=OD.product_code
                                GROUP BY order_code) 
				
								
16.	Which customer made the costliest order today?
SELECT c.customer_code,c.order_code
FROM  order_master c JOIN order_detail od
ON c.order_code= od.order_code
JOIN product pr
ON od.product_code= pr.product_code
GROUP BY c.customer_code,c.order_code
HAVING c.order_date= current_date

17.	Generate the report like
	
Customer name	Cust_addr	Order code	Order date	No_of_products_ordered	Total Bill

SELECT c.customer_name,om.order_code,om.order_date,SUM(qty_ordered*price) AS total_bill
FROM customer c JOIN order_master om
ON c.customer_code = om.customer_code
JOIN order_detail od
ON om.order_code= od.order_code
JOIN product pr
ON od.product_code=pr.product_code
GROUP BY c.customer_name,om.order_code,om.order_date 

18.	Write query the customers who are eligible for home delivery (if tot_bill>=5000)?
SELECT c.customer_name,om.order_code,om.order_date,SUM(od.qty_ordered * pr.price) AS total_bill,
CASE
WHEN SUM(qty_ordered*price) > 5000 THEN 'eligible for home delivery'
ELSE 'not eligible for home delivery'
END STATUS
FROM customer c JOIN order_master om
ON c.customer_code = om.customer_code
JOIN order_detail od
ON om.order_code= od.order_code
JOIN product pr
ON od.product_code=pr.product_code
GROUP BY c.customer_name,om.order_code,om.order_date 

19.	Which country has maximum branches?
SELECT country_code,COUNT(branch_code)
FROM branch
GROUP BY country_code
HAVING COUNT(branch_code)>= ALL(SELECT COUNT(branch_code)
							    FROM branch
							GROUP BY country_code)
								
20.	Which country has minimum branches?
SELECT country_code,COUNT(branch_code)
FROM branch
GROUP BY country_code
HAVING COUNT(branch_code)<=ALL  (SELECT COUNT(branch_code)
							    FROM branch
							GROUP BY country_code)
							
21.	Which country has no branches?
SELECT country_code,COUNT(branch_code)
FROM branch
GROUP BY country_code
HAVING COUNT(branch_code) NOT IN  (SELECT COUNT(branch_code)
							    FROM branch
							GROUP BY country_code)
							
22.	Which branch has more sales representatives?
SELECT branch_code,COUNT(salesrep_id)
FROM salesrep
GROUP BY branch_code
HAVING COUNT(salesrep_id) >= ALL (SELECT COUNT(salesrep_id)
								 FROM salesrep
								 GROUP BY branch_code)
								 
23.	Which branch has less sales representatives?
SELECT branch_code,COUNT(salesrep_id)
FROM salesrep
GROUP BY branch_code
HAVING COUNT(salesrep_id) <= ALL (SELECT COUNT(salesrep_id)
								 FROM salesrep
								 GROUP BY branch_code)
								 
24.	Which branch has no sales representatives?
SELECT branch_code,COUNT(salesrep_id)
FROM salesrep
GROUP BY branch_code
HAVING COUNT(salesrep_id) NOT IN (SELECT COUNT(salesrep_id)
								 FROM salesrep
								 GROUP BY branch_code)
								 
25.	Who is the active sales rep?
SELECT salesrep_id AS active_salesrep,COUNT(order_code)
FROM order_master
GROUP BY salesrep_id
HAVING COUNT(order_code)>= ALL (SELECT COUNT(order_code)
						  FROM order_master
						  GROUP BY salesrep_id)
						  
26.	Display all the managerâ€™s names?
SELECT salesrep_name AS manager_name
FROM salesrep
WHERE salesrep_id = ANY(SELECT mgr
					   FROM salesrep)
					   
27.	Display the sales rep that who has joined before their manager?
SELECT salesrep_id
FROM salesrep sr
WHERE salesrep_id  IN (SELECT mgr
					 FROM salesrep sr1
					 WHERE sr.salesrep_doj <sr1.salesrep_doj)
					 
					 OR
					 
SELECT sr.salesrep_id
FROM salesrep sr JOIN salesrep sr1
ON sr.salesrep_id= sr1.mgr
WHERE sr.salesrep_doj<sr1.salesrep_doj

28.	Display the sales rep that who earns more than their manager?
SELECT salesrep_id
FROM salesrep sr
WHERE salesrep_id  IN (SELECT mgr
					 FROM salesrep sr1
					 WHERE sr.salary >sr1.salary)
					 
					 OR
					 
SELECT sr.salesrep_id
FROM salesrep sr JOIN salesrep sr1
ON sr.salesrep_id= sr1.mgr
WHERE sr.salary>sr1.salary



29.	Display the manager who earns more than average salary of the sales rep working under them.
SELECT mgr
FROM salesrep
GROUP BY mgr
HAVING sum(salary)> (SELECT AVG(salary)
                                         FROM salesrep);



30.	Display the sales rep details that who started their work immediately?
SELECT salesrep_name
FROM salesrep 
WHERE salesrep_id  IN (SELECT salesrep_id
							FROM order_master)
31.	Display the sales rep that who is in bench for a long time?
SELECT salesrep_name
FROM salesrep 
WHERE salesrep_id NOT IN (SELECT salesrep_id
							FROM order_master)
							
32.	Display the details of in-active sales representatives.
SELECT salesrep_name
FROM salesrep 
WHERE salesrep_id NOT IN (SELECT salesrep_id
							FROM order_master)

33.	Generate the report like

Sales_rep_id	Sales_rep_name	salary	Total_orde_value	Commission(5% of bill)

SELECT sr.salesrep_id,sr.salesrep_name,sr.salary,SUM(od.qty_ordered*pr.price) AS total_order_value,SUM((qty_ordered*price* 5)/100) AS Commission
FROM salesrep sr JOIN order_master om
ON sr.salesrep_id = om.salesrep_id
JOIN order_detail od
ON om.order_code = od.order_code
JOIN product pr
ON od.product_code = pr.product_code
GROUP BY sr.salesrep_id,sr.salesrep_name,sr.salary

34. Generate the report like

Sales_rep_name	Order_code	Bill_value


SELECT sr.salesrep_name,od.order_code,SUM(od.qty_ordered*pr.price) AS Bill
FROM salesrep sr JOIN order_master om
ON sr.salesrep_id = om.salesrep_id
JOIN order_detail od
ON om.order_code = od.order_code
JOIN product pr
ON od.product_code = pr.product_code
GROUP BY sr.salesrep_name,od.order_code

35. Generate the report like

Sales_rep_name	Order_code	No_of_products(in order)

SELECT sr.salesrep_name,od.order_code, COUNT(od.product_code) AS product_count
FROM salesrep sr JOIN order_master om
ON sr.salesrep_id = om.salesrep_id
JOIN order_detail od
ON om.order_code = od.order_code
JOIN product pr
ON od.product_code = pr.product_code
GROUP BY sr.salesrep_name,od.order_code

36. Generate the report like 
 
Sales_rep_name	Order_code	Bill_value	No_of_products(in order)
And
A. For the orders placed on the year 2010
B. For the sales rep who has placed not more than 10 orders
B. For the sales rep whose salary >45000

SELECT sr.salesrep_name,od.order_code,SUM(od.qty_ordered*pr.price) AS Bill,COUNT(od.product_code) AS product_count
FROM salesrep sr JOIN order_master om
ON sr.salesrep_id = om.salesrep_id
JOIN order_detail od
ON om.order_code = od.order_code
JOIN product pr
ON od.product_code = pr.product_code
GROUP BY sr.salesrep_name,od.order_code	


37. Who is the senior most sales rep?
SELECT salesrep_name
FROM salesrep
WHERE salesrep_doj<= ALL(SELECT salesrep_doj
						FROM salesrep)

38. Find the no of orders processed by junior most sales rep
SELECT sr.salesrep_id,COUNT(order_code) AS NO_OF_ORDERS
FROM salesrep sr
JOIN order_master om
ON sr.salesrep_id=om.salesrep_id
GROUP BY sr.salesrep_id
ORDER BY sr.salesrep_id DESC
LIMIT 1

39. Find the no of orders processed by each month in the year 2010?
SELECT EXTRACT(month FROM order_date) AS MONTH,
			COUNT(order_code) AS NO_OF_ORDERS    
FROM order_master
WHERE EXTRACT(YEAR FROM order_date)=2010
GROUP BY ROLLUP(EXTRACT(month FROM order_date))
ORDER BY EXTRACT(month FROM order_date)

40. Which region is having in-active sales rep (using joins?)
SELECT c.region,s.salesrep_id
FROM country c JOIN branch b
ON c.country_code=b.country_code
JOIN salesrep s
ON b.branch_code=s.branch_code
LEFT JOIN order_master om
ON s.salesrep_id=om.salesrep_id
WHERE om.salesrep_id IS NULL

41. Which region is having junior most sales rep?
SELECT c.region,MAX(salesrep_id) AS SALESREP
FROM country c
JOIN branch b
ON c.country_code=b.country_code
JOIN salesrep s
ON b.branch_code=s.branch_code
WHERE salesrep_id = (SELECT MAX(salesrep_id) FROM salesrep)
GROUP BY region
ORDER BY region
42. Find the no of orders whose bill is less than 500?
SELECT od.order_code,COUNT(od.qty_ordered),
										SUM(od.qty_ordered*p.price)as bill	
FROM order_detail od JOIN product p 	
ON p.product_code=od.product_code
GROUP BY od.order_code
HAVING SUM(od.qty_ordered*price)<500

43. What is the frequently ordered product by the most active customer?
SELECT * FROM (SELECT product_code,count(product_code),
DENSE_RANK() OVER (ORDER BY COUNT (product_code) DESC)rank
FROM order_detail od
JOIN order_master om
ON om.order_code=od.order_code
WHERE customer_code=(SELECT customer_code
							FROM order_master
							GROUP BY customer_code
									HAVING COUNT(order_code)>=ALL(SELECT 
					COUNT(order_code)
												   FROM order_master
									GROUP BY customer_code))
GROUP BY product_code
ORDER BY COUNT(product_coDe) DESC)temp
WHERE rank<=1

44. What are all the products are not ordered by active customer?     
SELECT p.product_code
FROM product p LEFT JOIN order_detail od
ON p.product_code=od.product_code
WHERE od.product_code IS NULL    

45. Display the orders which canâ€™t be processed immediately?

SELECT order_code
FROM order_detail od  JOIN product p
ON p.product_code=od.product_code
WHERE p.qty_on_hand<od.qty_ordered


46. Complete order report
Cust_name	Cust_cose	Order_code	Product_id	Product_name	Order_date
SELECT c.customer_code,c.customer_name,om.order_code,p.product_code,p.prod_desc,om.order_date
FROM customer c
JOIN order_master om
ON c.customer_code=om.customer_code
JOIN order_detail od
ON om.order_code=od.order_code
JOIN product p
ON od.product_code=p.product_code

47. What is the order of execution of clauses?
     From
     Where
     Group by
     Having
     Select
     Order by
 
48. Department wise who is the maximum salary earner?
      
49. Find the Top-10 active customers based on no. of orders?
SELECT c.customer_code,c.customer_name,COUNT(order_code) AS NO_OF_ORDERS
FROM customer c
JOIN order_master om
ON c.customer_code=om.customer_code
GROUP BY c.customer_code
ORDER BY c.customer_code
LIMIT 10 




50. Find the Top-5 orders based on bill value.
SELECT om.order_code,SUM(qty_ordered*price) AS bill
FROM order_master om
JOIN order_detail od
ON om.order_code=od.order_code
JOIN product p
ON od.product_code=p.product_code
GROUP BY om.order_code
ORDER BY om.order_code DESC
LIMIT 5

51. Display the sales rep that who processed the orders ORD11 and ORD15.
SELECT salesrep_id FROM order_master
WHERE order_code='OR11'
UNION
SELECT salesrep_id FROM order_master
WHERE order_code='OR15'

52. Generate a report like â€˜worker works for managerâ€™
       
      
SELECT s.salesrep_name||'works for '||mgr.salesrep_name AS WWFM
FROM salesrep s 
JOIN salesrep mgr
ON mgr.salesrep_id=s.mgr



------------------------

5)Display all the managerâ€™s names ?

SELECT salesrep_name AS Manager_names
FROM salesrep
WHERE mgr = ANY(SELECT mgr
			    FROM salesrep);

6)Display the sales rep that who has joined before their manager  ?

SELECT salesrep_id
FROM salesrep s
WHERE salesrep_id IN (SELECT mgr
					  FROM salesrep sr
					  WHERE s.salesrep_doj < sr.salesrep_doj)

